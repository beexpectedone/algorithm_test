时间复杂度分析法：树形分析法
假设有 n 个数，那么：
第一层拆成 n/2 , n/2   时间复杂度为 O(1)
第二层拆成 n/4, n/4, n/4, n/4（两个 n/2 拆得） 时间复杂度为O(2)
第三层拆成 n/8, n/8, n/8, n/8,....（由四个 n/4 拆得） 时间复杂度为 O(4)
......以此类推
到最后一层时间复杂度大概为 O(n) 的级别



Binary Tree DFS Traversal(深度优先遍历)：
preorder(根-左-右) / inorder(左-根-右) / postorder(左-右-根)

程序里尽量不要出现全局变量（来自“查询最大深度”）

本部分内容：
递归方式实现深度优先搜索算法（DFS）
---DFS使用非递归的方式实现的写法

二叉树上的递归 Recursion in Binary Tree
    遍历法 Traverse
    分治法 Divide Conquer

二叉搜索树
    性质：中序遍历是升序遍历
    功能：O(h)的时间查找，删除，插入

二叉树上的宽度优先搜索
    使用一个队列的宽度优先搜索算法 (Queue）
        在二叉树上无需使用Hash判重
    如何实现分层遍历
必“背”程序：
    非递归版本的 Pre Order，In Order
    二叉树分层遍历