使用递归和非递归的权衡-----看面试管的要求，是不是特定不想要让你使用递归
使用T函数的时间复杂度计算方式

通用的二分法模板：
start + 1 < end
int mid = start + (end - start) / 2
A[mid] === <>
A[start] A[end] target

两类二分法
    二分位置：Binary search on index
    二分答案 Binary search on result

理解二分法的三个层次：
    1.头尾指针，取中点，判断往哪儿走
    2.寻找满足某个条件的第一个或是最后一个位置
    3.保留剩下来一定有解的那一半

二分法进一步理解：保留有答案的那个部分
（二分法本质上就是不断地缩小答案的区间，保留有答案的那一个部分）